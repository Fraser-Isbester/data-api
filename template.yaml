AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: DAPI backend

Parameters:
  Stage:
    Type: String
    AllowedValues: [Prod, QA, Dev]
  Stackname:
    Type: String
  S3Bucket:
    Type: String
  SwaggerFile:
    Type: String
  ApiLogGroup:
    Description: The Existing API log group
    Default: NONE
    Type: String

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.8
    Tracing: Active
    Tags:
      env: !Ref Stage
      Stack: !Ref Stackname

  Api:
    MinimumCompressionSize: 1000
    TracingEnabled: True
    # AccessLogSetting:
    #   DestinationArn: !GetAtt APIGatewayLogGroup.Arn
    #   Format: '{
    #               "request_id": "$context.requestId",
    #               "request_time": "$context.requestTimeEpoch",
    #               "integration_latency": "$context.integration.latency",
    #               "ip": "$context.identity.sourceIp",
    #               "resource": "$context.resourcePath",
    #               "method": "$context.httpMethod",
    #               "status": "$context.status",
    #               "response_length": "$context.responseLength",
    #               "response_error": "$context.error.messageString"
    #           }'

Resources:

# # # # API Definition # # #
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Stage}-${Stackname}-Api
      StageName: !Sub ${Stage}
      Auth:
        ResourcePolicy:
          AwsAccountWhiteList: [!Ref AWS::AcountId]
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: !Sub ${SwaggerFile}

  # # Storage # #
  ODS:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Stage}-${Stackname}-Table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE

  # # Compute # #
  TableDesigner:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Stage}-${Stackname}-TableDesigner
      Description: >
        Consumes a set of JsonSchemas and Access Patterns
        and designs a Dynamo Resource
      CodeUri: TableDesigner/
      Handler: app.lambda_handler
      # Role: !GetAtt PatientPortalBeRole.Arn

# # # Logging # # #
  # APIGatewayLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "/aws/apigateway/${Stage}-${Stackname}-Api"
  #     RetentionInDays: 7

# # # Security # # #
  TableDesignRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: [sts:AssumeRole]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        # - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess

  OdsCreate:
    Type: AWS::IAM::Policy
    Properties:
      Roles: [!Ref TableDesignRole]
      PolicyName: !Sub ${Stage}-${Stackname}-OdsCreate
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: [dynamodb:PutItem]
            Resource: [!GetAtt ODS.Arn]

  OdsRead:
    Type: AWS::IAM::Policy
    Properties:
      Roles: [!Ref TableDesignRole]
      PolicyName: !Sub ${Stage}-${Stackname}-OdsRead
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
              - dynamodb:Query
            Resource: [!GetAtt ODS.Arn]

  OdsUpdate:
    Type: AWS::IAM::Policy
    Properties:
      Roles: [!Ref TableDesignRole]
      PolicyName: !Sub ${Stage}-${Stackname}-OdsUpdate
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: [dynamodb:UpdateItem]
            Resource: [!GetAtt ODS.Arn]
